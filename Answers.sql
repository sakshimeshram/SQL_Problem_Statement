-- Q1. What is the total sales revenue generated by each product?
select p.product_name,
(select count(s.product_id) from sales s where s.product_id=p.product_id)*p.price as revenue
from product p 
; 

-- Q2. Which 3 product has the highest sales revenue?
select p.product_name,
(select count(s.product_id) from sales s where s.product_id=p.product_id)*p.price as revenue
from product p order by revenue desc limit 3;

-- Q3. How many users have signed up for the service and has taken the
-- gold membership?
select count(gu.userid) as Users
from users u inner join goldusers_signup gu
on u.userid=gu.userid;

-- Q5. What is the total revenue generated from gold users?
select a.golduser,sum(RevenueProwise) as Revenue
from(select gu.userid as golduser,s.product_id,
count(s.product_id)*(select price from product where product_id=s.product_id)as RevenueProwise
from goldusers_signup gu inner join sales s
on gu.userid=s.goldusers_signup_userid
group by golduser,s.product_id)a
group by a.golduser;

-- Q6. Which users has been a gold user for the How much of time?
select userid,
current_date-gold_signup_date as days
from goldusers_signup
 ;

-- Q7. What is the most popular product among gold users?
select 
s.product_id,
(select product_name from product where product_id=s.product_id) as Productname,
count(s.product_id) 
from goldusers_signup gus
inner join sales s
on gu.userid=s.goldusers_signup_userid
group by s.product_id
order by count(s.product_id)  desc limit 1;

-- Q8. What is the total sales revenue generated in each year?
select extract(year from total_revenue.createdate) as CreateYear,sum(revenuepro) as Total_revenue
from 
(select 
s.product_id ,s.created_date as createdate,
count(s.product_id)*(select price from product where product_id=s.product_id) as revenuepro
from sales s
group by s.created_date,s.product_id)total_revenue
group by CreateYear
order by CreateYear;

-- Q10. What is the average Gold-signup compare to just sign up for the
-- users?
select avg(gu.userid),avg(u.userid) from goldusers_signup gu
inner join sales s 
on gu.userid=s.goldusers_signup_userid
inner join users u
on s.users_userid=u.userid ;

-- Q11. How many gold members users have order how many numbers
-- of time ?
select count(golduser) as Total_goldusers,sum(orders) as Total_orders
from
(select gu.userid as golduser,count(s.goldusers_signup_userid) as orders
from goldusers_signup gu
inner join  sales s
on gu.userid=s.goldusers_signup_userid
group by gu.userid)as golduserscount;


-- Q14. What was the first order purchase by each customer ?
select u.userid,
(select product_id from sales  where users_userid=userid order by created_date asc limit 1)
from users u
order by u.userid;

-- Q15. What is the most purchase item on the menu and how many
-- times was it purchased by all customers?

select product_name,
(select count(s.product_id) from sales s where s.product_id=product_id) as No_of_Purchase
from product
order by No_of_Purchase desc limit 1;

-- Q16. Which item was most popular for each customer ?
select product_name from product
where exists(select s.product_id from sales s );

-- Q17. Which item was purchase first by the customer after they
-- become a member ?

select gu.userid,
(select product_id from sales where gold_signup_userid=gu.userid order by created_date asc limit 1)
from goldusers_signup gu
limit 1
;

-- Q18. Which item was purchase before the customer become a
-- member ?

select u.userid,
(select product_id from sales  where users_userid=userid order by created_date desc limit 1)
from users u
order by u.userid;

-- Q19. What is the total orders and amount spent for each member
-- before they become a member ?

select user_details.CustUser,
sum(orders) as Total_orders,
sum(Amount)as Total_amount
from (select u.userid as CustUser,count(s.product_id) as orders,
count(s.product_id)*(select price from product where product_id=s.product_id) as Amount
from  users u
inner join  sales s
on u.userid=s.users_userid
group by u.userid,s.product_id) user_details
group by user_details.CustUser;


-- Q20. Rank all the transactions for each member whenever they are a
-- XYZ gold member for every non gold member Transaction marks as
-- na ?
select s.*,dense_rank() over(order by userid) as Rank
from sales s;

